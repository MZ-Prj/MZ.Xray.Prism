// <auto-generated />
using System;
using MZ.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MZ.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250528113341_ModifyUserSetting")]
    partial class ModifyUserSetting
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("MZ.Domain.Entities.AppSettingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUsernameSave")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastestUsername")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppSetting", (string)null);
                });

            modelBuilder.Entity("MZ.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("MZ.Domain.Entities.UserSettingEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Language")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Theme")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("UserSetting", (string)null);
                });

            modelBuilder.Entity("MZ.Domain.Entities.UserSettingEntity", b =>
                {
                    b.HasOne("MZ.Domain.Entities.UserEntity", "User")
                        .WithOne("UserSetting")
                        .HasForeignKey("MZ.Domain.Entities.UserSettingEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MZ.Domain.Entities.UserEntity", b =>
                {
                    b.Navigation("UserSetting");
                });
#pragma warning restore 612, 618
        }
    }
}
