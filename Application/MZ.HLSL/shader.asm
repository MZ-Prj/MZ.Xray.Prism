//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float brightnessLevel;
//   float contrastLevel;
//   float filterMode;
//   sampler2D inputTexture;
//   float sharpnessLevel;
//   float2 textureSize;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   textureSize     c0       1
//   sharpnessLevel  c1       1
//   brightnessLevel c2       1
//   contrastLevel   c3       1
//   filterMode      c4       1
//   inputTexture    s0       1
//

    ps_2_0
    def c5, 0.298999995, 0.587000012, 0.114, -2
    def c6, -3, 0, 0, 0
    def c7, 0, 4, 1, -1
    dcl t0.xy
    dcl_2d s0
    mov r0.x, t0.x
    rcp r0.z, c0.y
    add r0.y, -r0.z, t0.y
    add r1.y, r0.z, t0.y
    mov r1.x, t0.x
    mov r2.y, c7.x
    rcp r3.x, c0.x
    mov r2.x, -r3.x
    add r2.xy, r2, t0
    mov r3.y, c7.x
    add r3.xy, r3, t0
    texld r0, r0, s0
    texld r1, r1, s0
    texld r2, r2, s0
    texld r3, r3, s0
    texld r4, t0, s0
    add r0, r0, r1
    add r0, r2, r0
    add r0, r3, r0
    mul r0, r0, c1.x
    mov r1.yzw, c7
    mad r1.x, c1.x, r1.y, r1.z
    mad r0, r4, r1.x, -r0
    dp3 r1.x, r4, c5
    add r2.xyz, r0, c2.x
    lrp r0.xyz, c3.x, r2, r1.x
    max r1.x, r0.x, r0.y
    max r2.x, r1.x, r0.z
    add r1.x, r0.x, -r2.x
    mul r1.x, r1.x, r1.x
    mov r2.w, c5.w
    add r1.z, r2.w, c4.x
    mul r1.z, r1.z, r1.z
    cmp r1.z, -r1.z, c7.z, c7.x
    cmp r1.x, -r1.x, r1.z, c7.x
    add r2.y, r0.y, -r2.x
    add r2.x, r0.z, -r2.x
    mov r3.x, c4.x
    add r2.z, r3.x, c6.x
    mul r2.xyz, r2, r2
    cmp r2.z, -r2.z, c7.z, c7.x
    cmp r2.y, -r2.y, r2.z, c7.x
    add r1.z, r1.z, r2.z
    cmp r1.z, -r1.z, c7.x, c7.z
    add r1.x, r1.x, r2.y
    cmp r1.x, -r1.x, c7.x, c7.z
    add r1.y, -r1.y, c4.x
    mul r1.y, r1.y, r1.y
    cmp r1.y, -r1.y, c7.z, c7.x
    cmp r2.x, -r2.x, r1.y, c7.x
    add r1.y, r1.y, r1.z
    cmp r1.y, -r1.y, -c7.x, -c7.z
    add r1.x, r1.x, r2.x
    mov_sat r2, r0
    dp3 r0.xyz, r0, c5
    cmp r3, -r1.x, r0, r2
    add r0.x, r1.w, c4.x
    mul r0.x, r0.x, r0.x
    cmp r3, -r0.x, r2, r3
    cmp r0.x, -r0.x, c7.w, r1.y
    mul r0.y, c4.x, c4.x
    cmp r1.xyz, -r0.y, r0.z, r3
    cmp r1.w, -r0.y, r0.w, r3.w
    cmp r0.x, -r0.y, c7.w, r0.x
    cmp r0, r0.x, r2, r1
    mov oC0, r0

// approximately 66 instruction slots used (5 texture, 61 arithmetic)
