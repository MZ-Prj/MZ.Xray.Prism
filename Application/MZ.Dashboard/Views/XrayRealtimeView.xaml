<UserControl x:Class="MZ.Dashboard.Views.XrayRealtimeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:behaviors="clr-namespace:MZ.Dashboard.Bahaviors"
             xmlns:converters="clr-namespace:MZ.Resource.Converters;assembly=MZ.Resource"
             xmlns:managers="clr-namespace:MZ.Resource.Managers;assembly=MZ.Resource" 
             xmlns:viewmodels="clr-namespace:MZ.Dashboard.ViewModels" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d:DataContext="{d:DesignInstance Type=viewmodels:XrayRealtimeViewModel}"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <converters:NumericDecimalConverter x:Key="NumericDecimalConverter"/>
        <converters:NumericFloatConverter x:Key="NumericFloatConverter"/>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <converters:ContrastColorConverter  x:Key="ContrastColorConverter"/>
        <converters:UppercaseConverter x:Key="UppercaseConverter"/>
        <converters:LanguageConverter x:Key="LanguageConverter"/>
    </UserControl.Resources>
    
    <Canvas x:Name="VideoCanvas" 
            ClipToBounds="True" 
            Background="{DynamicResource MahApps.Brushes.Control.Background}">
        <i:Interaction.Behaviors>
            <behaviors:XrayRealtimeBehavior />
        </i:Interaction.Behaviors>

        <Canvas x:Name="CanvasImageView" 
                DataContext="{Binding Path=Media.Model}"
                CacheMode="BitmapCache"
                ClipToBounds="True" 
                IsManipulationEnabled="true" 
                Width="{Binding Path=Information.Width}" 
                Height="{Binding Path=Information.Height}"
                SnapsToDevicePixels="True"
                RenderOptions.BitmapScalingMode="HighQuality"
                RenderOptions.EdgeMode="Aliased"
                RenderTransformOrigin="0.5, 0.5">
            <Canvas.Effect>
                <managers:XrayShaderManager Input="{Binding Path=ImageSource}"
                                            TextureSize="{Binding Path=Information.Size, Mode=TwoWay}"
                                            SharpnessLevel="{Binding Path=Filter.Sharpness, Mode=TwoWay}"
                                            BrightnessLevel="{Binding Path=Filter.Brightness, Mode=TwoWay}" 
                                            ContrastLevel="{Binding Path=Filter.Contrast, Mode=TwoWay}"
                                            ColorMode="{Binding Path=Filter.ColorMode, Mode=TwoWay, Converter={StaticResource NumericFloatConverter}}"/>
            </Canvas.Effect>
            <Canvas.RenderTransform>
                <ScaleTransform ScaleX="{Binding Path=Filter.Zoom}" ScaleY="{Binding Path=Filter.Zoom}"/>
            </Canvas.RenderTransform>
            
            <Canvas.Background>
                <ImageBrush ImageSource="{Binding Path=ImageSource, Mode=OneWay}"/>
            </Canvas.Background>
        </Canvas>

        <Canvas x:Name="CanvasAIPredictView"
                CacheMode="BitmapCache"
                ClipToBounds="True" 
                IsManipulationEnabled="true" 
                DataContext="{Binding Path=VisionService}"
                Visibility="{Binding Path=DataContext.AIOnOff, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource AncestorType=UserControl}}"
                Width="{Binding Path=ViewParameters.CanvasSize.Width}" 
                Height="{Binding Path=ViewParameters.CanvasSize.Height}"
                SnapsToDevicePixels="True"
                RenderOptions.BitmapScalingMode="HighQuality"
                RenderOptions.EdgeMode="Aliased"
                RenderTransformOrigin="0.5, 0.5">

            <ItemsControl ItemsSource="{Binding Path=ObjectDetector.SelectedDetector.Predict}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding Path=X}" />
                        <Setter Property="Canvas.Top" Value="{Binding Path=Y}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas>
                            <Canvas.Style>
                                <Style TargetType="Canvas">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsBlink, Mode=TwoWay}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard RepeatBehavior="0:0:5" AutoReverse="True">
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard />
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Style>

                            <Border Background="{Binding Path=Color}" 
                                    CornerRadius="4" 
                                    Padding="4">
                                <TextBlock Text="{Binding Path=Name, Converter={StaticResource UppercaseConverter}}" 
                                           Foreground="{Binding Path=Color, Converter={StaticResource ContrastColorConverter}}"
                                           FontSize="10"
                                           FontWeight="Bold"/>
                            </Border>

                            <Rectangle Stroke="{Binding Path=Color}" 
                                       StrokeThickness="2"
                                       Width="{Binding Path=Width}"
                                       Height="{Binding Path=Height}"
                                       RadiusX="4"
                                       RadiusY="4"/>

                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Canvas.RenderTransform>
                <ScaleTransform ScaleX="{Binding Path=ViewParameters.Zoom}" ScaleY="{Binding Path=ViewParameters.Zoom}"/>
            </Canvas.RenderTransform>
        </Canvas>

        <Canvas x:Name="OverlayGradient"
                CacheMode="BitmapCache"
                IsManipulationEnabled="true" 
                Visibility="Collapsed"
                DataContext="{Binding Path=Media}"
                Width="{Binding Path=Information.Size.Width}" 
                Height="{Binding Path=Information.Size.Height}"
                SnapsToDevicePixels="True"
                RenderOptions.BitmapScalingMode="HighQuality"
                RenderOptions.EdgeMode="Aliased"
                RenderTransformOrigin="0.5, 0.5">
            <Rectangle Canvas.Left="0"
                       Canvas.Top="0"
                       Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}"
                       Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}}"
                       RadiusX="8"
                       RadiusY="8"
                       Opacity="0.1">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#00000000" Offset="0.0"/>
                        <GradientStop Color="#00000000" Offset="0.9"/>
                        <GradientStop Color="{DynamicResource MahApps.Colors.Gray.MouseOver}" Offset="1.0"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Canvas>

        <Rectangle x:Name="BorderRectangle"
                   Canvas.Left="0"
                   Canvas.Top="0"
                   Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}"
                   Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}}"
                   RadiusX="8"
                   RadiusY="8"
                   Stroke="{DynamicResource MahApps.Brushes.Gray9}"
                   StrokeThickness="1"/>

        <StackPanel x:Name="OverlayPredict"
                    Canvas.Left="0" Canvas.Top="0"
                    Visibility="{Binding Path=AIOnOff, Converter={StaticResource VisibilityConverter}}">
            <ItemsControl ItemsSource="{Binding Path=VisionService.ObjectDetector.SelectedDetector.Predict}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton Content="{Binding Path=Name, Converter={StaticResource UppercaseConverter}}" 
                                      Background="{Binding Path=Color}" 
                                      Foreground="{Binding Path=Color, Converter={StaticResource ContrastColorConverter}}"
                                      IsChecked="{Binding Path=IsBlink, Mode=TwoWay}"
                                      Margin="4"
                                      BorderThickness="0"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <StackPanel x:Name="OverlayBottomControls" 
                Visibility="Collapsed"
                Canvas.Left="0" Canvas.Bottom="0"
                Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}">

            <Grid Grid.Row="0" Margin="4">
                <Slider DataContext="{Binding Path=Media.Model}"
                        Minimum="1" 
                        Maximum="{Binding Path=Information.MaxSlider, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        Value="{Binding Path=Information.Slider, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        TickFrequency="1"
                        IsSnapToTickEnabled="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding Path=ChangedSliderCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
            </Grid>

            <Grid Grid.Row="1" Margin="4" >

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ItemsControl Grid.Column="0" ItemsSource="{Binding Path=VideoButtons}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="FrameworkElement.Margin" Value="4"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <RepeatButton Command="{Binding Path=Command}" BorderThickness="0" Width="48" Height="48">
                                <iconPacks:PackIconMaterial Kind="{Binding Path=IconKind}"  Width="24" Height="24"/>
                            </RepeatButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl Grid.Column="1" ItemsSource="{Binding Path=ColorButtons}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="FrameworkElement.Margin" Value="4"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Command="{Binding Path=Command}" 
                                    CommandParameter="{Binding Path=UId}"
                                    Foreground="{Binding Path=ColorBrush}"
                                    BorderThickness="0" Width="48" Height="48">
                                <iconPacks:PackIconMaterial Kind="{Binding Path=IconKind}" Width="24" Height="24"/>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl Grid.Column="2" ItemsSource="{Binding Path=FilterButtons}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="FrameworkElement.Margin" Value="4"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <RepeatButton Command="{Binding Path=Command}" BorderThickness="0" Width="48" Height="48">
                                <iconPacks:PackIconMaterial Kind="{Binding Path=IconKind}"  Width="24" Height="24"/>
                            </RepeatButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl Grid.Column="4" ItemsSource="{Binding Path=AIButtons}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="FrameworkElement.Margin" Value="4"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Command="{Binding Path=Command}" BorderThickness="0" Width="48" Height="48">
                                <iconPacks:PackIconMaterial Kind="{Binding Path=IconKind}"  Width="24" Height="24"/>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Grid>
        </StackPanel>

        <StackPanel x:Name="OverlayTopControls"
                Visibility="Collapsed"
                Canvas.Right="0" Canvas.Bottom="0">
            <Grid Margin="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ToggleButton x:Name="MoreButton" 
                          Grid.Row="1"
                          Width="48" Height="48"
                          BorderThickness="0" 
                          Margin="4">
                    <iconPacks:PackIconMaterial Kind="DotsVertical" Width="24" Height="24"/>
                </ToggleButton>

                <ItemsControl x:Name="DropdownMenu"
                          Grid.Row="0"
                          Visibility="{Binding Path=IsChecked, ElementName=MoreButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                          ItemsSource="{Binding Path=TopButtons}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel HorizontalAlignment="Stretch" Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="FrameworkElement.Margin" Value="4"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Command="{Binding Path=Command}" BorderThickness="0" Width="48" Height="48">
                                <iconPacks:PackIconMaterial Kind="{Binding Path=IconKind}"  Width="24" Height="24"/>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </StackPanel>

    </Canvas>
</UserControl>
